{"version":3,"sources":["webpack:///./node_modules/_echarts-wordcloud@1.1.3@echarts-wordcloud/src/wordCloud.js","webpack:///./node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/index.js","webpack:///./node_modules/_echarts-wordcloud@1.1.3@echarts-wordcloud/src/layout.js","webpack:///./node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillView.js","webpack:///./node_modules/_echarts-wordcloud@1.1.3@echarts-wordcloud/index.js","webpack:///./node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillSeries.js","webpack:///./node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFill.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapModel.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapCoordSys.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/bmap.js","webpack:///./node_modules/_echarts-wordcloud@1.1.3@echarts-wordcloud/src/WordCloudSeries.js","webpack:///./node_modules/_echarts-wordcloud@1.1.3@echarts-wordcloud/src/WordCloudView.js","webpack:///./node_modules/_echarts-liquidfill@2.0.6@echarts-liquidfill/src/liquidFillLayout.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapView.js"],"names":["echarts","layoutUtil","wordCloudLayoutHelper","isSupported","Error","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","width","height","newImageData","createImageData","toneSum","toneCnt","i","data","length","alpha","tone","threshold","putImageData","registerLayout","ecModel","api","eachSeriesByType","seriesModel","gridRect","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","getData","canvas","document","createElement","maskImage","get","drawImage","e","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","Math","PI","gridSize","onWordCloudDrawn","item","detail","drawn","layoutInstance","ondraw","gx","x","gy","y","list","mapArray","value","idx","itemModel","getItemModel","getName","number","linearMap","sort","a","b","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shuffle","shape","addEventListener","dispose","removeEventListener","preventDefault","registerPreprocessor","option","series","util","isArray","compats","compatTextStyle","textStyle","each","key","hasOwnProperty","format","capitalFirst","seriesItem","type","normal","emphasis","module","exports","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","callbacks","undefined","message","setZeroTimeout","callback","id","push","evt","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","fillText","Array","prototype","some","minFontSize","hanWidth","mWidth","size","font","measureText","shuffleArray","arr","j","floor","random","WordCloud","elements","options","forEach","el","getElementById","tagName","appendChild","settings","color","minSize","weightFactor","backgroundColor","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","classes","hover","click","factor","pt","theta","sin","thetaPrime","cos","sqrt","max","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","g","maskRectWidth","abs","min","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","left","eventY","top","wordcloudhover","info","dimension","wordcloudclick","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","round","getTextInfo","word","weight","rotateDeg","debug","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","body","save","scale","translate","rotate","fillStyle","textBaseline","strokeRect","restore","occupied","bounds","singleGridLoop","fillRect","gw","gh","fillTextWidth","fillTextHeight","canFitText","px","py","drawText","distance","attributes","span","transformRule","styleRules","cssProp","textContent","style","attribute","className","fillGridAt","updateGrid","w","h","putWord","r","tryToPutWordAtPoint","gxy","rot","concat","res","sendEvent","cancelable","createEvent","initCustomEvent","dispatchEvent","this","start","loopingFunction","stoppingFunction","clearRect","position","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","listener","anotherWordCloudStart","loop","canceled","toFixed","numberUtil","symbolUtil","parsePercent","LiquidLayout","extendChartView","render","group","removeAll","outlineDistance","outlineBorderWidth","showOutline","outterRadius","innerRadius","paddingRadius","cx","cy","isFillContainer","symbol","outline","getOutline","lineWidth","add","wavePath","getBackground","oldData","_data","waves","getPath","isForClipping","indexOf","path","graphic","makePath","slice","bouding","getBoundingRect","BoundingRect","createSymbol","Circle","outlinePath","fill","setStyle","getModel","getItemStyle","strokePath","z2","fillPath","stroke","Group","getWave","isInverse","oldWave","radiusX","radiusY","itemStyleModel","phase","amplitude","waveLength","waterLevel","normalStyle","seriesColor","wave","inverse","_waterLevel","hoverStyle","setHoverStyle","clip","setClipPath","setWaveAnimation","maxSpeed","direction","defaultSpeed","cnt","count","speed","phaseOffset","animate","when","during","dirty","getText","labelModel","formatLabel","formatted","getFormattedLabel","defaultVal","defaultLabel","name","isNaN","textOption","text","textAlign","textVerticalAlign","silent","outsideTextRect","Rect","setText","insideTextRect","insColor","textFill","boundingCircle","CompoundPath","paths","diff","initProps","setItemGraphicEl","update","newIdx","oldIdx","waveElement","getItemGraphicEl","newWave","shapeAttrs","attr","styleAttrs","updateProps","useStyle","clipPath","remove","execute","completeDimensions","extendSeriesModel","visualColorAccessPath","optionUpdated","getInitialData","dimensions","List","initData","defaultOption","period","waveAnimation","animationEasing","animationEasingUpdate","animationDuration","animationDurationUpdate","show","borderDistance","itemStyle","borderColor","borderWidth","shadowBlur","shadowColor","backgroundStyle","opacity","label","insideColor","align","baseline","registerVisual","curry","v2Equal","_default","extendComponentModel","getBMap","__bmap","setCenterAndZoom","zoom","centerOrZoomChanged","mapStyle","roam","Overlay","_echarts","zrUtil","matrix","BMapCoordSys","bmap","_bmap","_mapOffset","_api","_projection","BMap","MercatorProjection","dataToCoordSize","dataSize","dataItem","map","dimIdx","val","halfSize","p1","p2","dataToPoint","createOverlayCtor","root","_root","initialize","getPanes","labelPane","draw","setZoom","_zoom","setCenter","_center","lngLatToPoint","Point","setMapOffset","mapOffset","point","pointToOverlayPixel","pointToData","overlayPixelToPoint","lng","lat","getViewRect","getRoamTransform","create","prepareCustoms","coordSys","coord","bind","bmapCoordSys","getDom","eachComponent","bmapModel","painter","getZr","viewportRoot","getViewportRoot","bmapRoot","querySelector","removeChild","cssText","classList","Map","overlay","addOverlay","getViewportRootOffset","offsetLeft","offsetTop","centerAndZoom","__mapOffset","coordinateSystem","eachSeries","registerCoordinateSystem","registerAction","event","payload","bMapModel","getCenter","getZoom","version","dataIdx","textStyleModel","emphasisTextStyleModel","textEl","Text","setTextStyle","getItemVisual","rotation","forMerge","_model","getWaterPositions","stage","extendShape","buildPath","curves","moveTo","waveRight","c","pos","bezierCurveTo","lineTo","closePath","extendComponentView","rendering","moveHandler","target","offsetEl","parentNode","dispatchAction","zoomEndHandler","_oldMoveHandler","_oldZoomEndHandler","enableDragging","disableDragging","enableScrollWheelZoom","enableDoubleClickZoom","enablePinchToZoom","disableScrollWheelZoom","disableDoubleClickZoom","disablePinchToZoom","originalStyle","__mapStyle","newMapStyle","mapStyleStr","JSON","stringify","Object","keys","setMapStyle","parse"],"mappings":"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","file":"static/js/chunk-e60104b4.b56c4eca.js","sourcesContent":["var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n","module.exports = require('./src/liquidFill');\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape\n                }, seriesModel);\n\n                waveElement.useStyle(style);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","module.exports = require('./src/wordCloud');","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\nvar _default = echarts.extendComponentModel({\n  type: 'bmap',\n  getBMap: function () {\n    // __bmap is injected when creating BMapCoordSys\n    return this.__bmap;\n  },\n  setCenterAndZoom: function (center, zoom) {\n    this.option.center = center;\n    this.option.zoom = zoom;\n  },\n  centerOrZoomChanged: function (center, zoom) {\n    var option = this.option;\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\n  },\n  defaultOption: {\n    center: [104.114129, 37.550339],\n    zoom: 5,\n    mapStyle: {},\n    roam: false\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _echarts = require(\"echarts\");\n\nvar zrUtil = _echarts.util;\nvar graphic = _echarts.graphic;\nvar matrix = _echarts.matrix;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global BMap */\nfunction BMapCoordSys(bmap, api) {\n  this._bmap = bmap;\n  this.dimensions = ['lng', 'lat'];\n  this._mapOffset = [0, 0];\n  this._api = api;\n  this._projection = new BMap.MercatorProjection();\n}\n\nBMapCoordSys.prototype.dimensions = ['lng', 'lat'];\n\nBMapCoordSys.prototype.setZoom = function (zoom) {\n  this._zoom = zoom;\n};\n\nBMapCoordSys.prototype.setCenter = function (center) {\n  this._center = this._projection.lngLatToPoint(new BMap.Point(center[0], center[1]));\n};\n\nBMapCoordSys.prototype.setMapOffset = function (mapOffset) {\n  this._mapOffset = mapOffset;\n};\n\nBMapCoordSys.prototype.getBMap = function () {\n  return this._bmap;\n};\n\nBMapCoordSys.prototype.dataToPoint = function (data) {\n  var point = new BMap.Point(data[0], data[1]); // TODO mercator projection is toooooooo slow\n  // var mercatorPoint = this._projection.lngLatToPoint(point);\n  // var width = this._api.getZr().getWidth();\n  // var height = this._api.getZr().getHeight();\n  // var divider = Math.pow(2, 18 - 10);\n  // return [\n  //     Math.round((mercatorPoint.x - this._center.x) / divider + width / 2),\n  //     Math.round((this._center.y - mercatorPoint.y) / divider + height / 2)\n  // ];\n\n  var px = this._bmap.pointToOverlayPixel(point);\n\n  var mapOffset = this._mapOffset;\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\n};\n\nBMapCoordSys.prototype.pointToData = function (pt) {\n  var mapOffset = this._mapOffset;\n\n  var pt = this._bmap.overlayPixelToPoint({\n    x: pt[0] + mapOffset[0],\n    y: pt[1] + mapOffset[1]\n  });\n\n  return [pt.lng, pt.lat];\n};\n\nBMapCoordSys.prototype.getViewRect = function () {\n  var api = this._api;\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\n};\n\nBMapCoordSys.prototype.getRoamTransform = function () {\n  return matrix.create();\n};\n\nBMapCoordSys.prototype.prepareCustoms = function (data) {\n  var rect = this.getViewRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'bmap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(this.dataToPoint, this),\n      size: zrUtil.bind(dataToCoordSize, this)\n    }\n  };\n};\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nvar Overlay; // For deciding which dimensions to use when creating list data\n\nBMapCoordSys.dimensions = BMapCoordSys.prototype.dimensions;\n\nfunction createOverlayCtor() {\n  function Overlay(root) {\n    this._root = root;\n  }\n\n  Overlay.prototype = new BMap.Overlay();\n  /**\n   * 初始化\n   *\n   * @param {BMap.Map} map\n   * @override\n   */\n\n  Overlay.prototype.initialize = function (map) {\n    map.getPanes().labelPane.appendChild(this._root);\n    return this._root;\n  };\n  /**\n   * @override\n   */\n\n\n  Overlay.prototype.draw = function () {};\n\n  return Overlay;\n}\n\nBMapCoordSys.create = function (ecModel, api) {\n  var bmapCoordSys;\n  var root = api.getDom(); // TODO Dispose\n\n  ecModel.eachComponent('bmap', function (bmapModel) {\n    var painter = api.getZr().painter;\n    var viewportRoot = painter.getViewportRoot();\n\n    if (typeof BMap === 'undefined') {\n      throw new Error('BMap api is not loaded');\n    }\n\n    Overlay = Overlay || createOverlayCtor();\n\n    if (bmapCoordSys) {\n      throw new Error('Only one bmap component can exist');\n    }\n\n    if (!bmapModel.__bmap) {\n      // Not support IE8\n      var bmapRoot = root.querySelector('.ec-extension-bmap');\n\n      if (bmapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in BMapView\n        viewportRoot.style.left = '0px';\n        viewportRoot.style.top = '0px';\n        root.removeChild(bmapRoot);\n      }\n\n      bmapRoot = document.createElement('div');\n      bmapRoot.style.cssText = 'width:100%;height:100%'; // Not support IE8\n\n      bmapRoot.classList.add('ec-extension-bmap');\n      root.appendChild(bmapRoot);\n      var bmap = bmapModel.__bmap = new BMap.Map(bmapRoot);\n      var overlay = new Overlay(viewportRoot);\n      bmap.addOverlay(overlay); // Override\n\n      painter.getViewportRootOffset = function () {\n        return {\n          offsetLeft: 0,\n          offsetTop: 0\n        };\n      };\n    }\n\n    var bmap = bmapModel.__bmap; // Set bmap options\n    // centerAndZoom before layout and render\n\n    var center = bmapModel.get('center');\n    var zoom = bmapModel.get('zoom');\n\n    if (center && zoom) {\n      var pt = new BMap.Point(center[0], center[1]);\n      bmap.centerAndZoom(pt, zoom);\n    }\n\n    bmapCoordSys = new BMapCoordSys(bmap, api);\n    bmapCoordSys.setMapOffset(bmapModel.__mapOffset || [0, 0]);\n    bmapCoordSys.setZoom(zoom);\n    bmapCoordSys.setCenter(center);\n    bmapModel.coordinateSystem = bmapCoordSys;\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'bmap') {\n      seriesModel.coordinateSystem = bmapCoordSys;\n    }\n  });\n};\n\nvar _default = BMapCoordSys;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\nvar BMapCoordSys = require(\"./BMapCoordSys\");\n\nrequire(\"./BMapModel\");\n\nrequire(\"./BMapView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * BMap component extension\n */\necharts.registerCoordinateSystem('bmap', BMapCoordSys); // Action\n\necharts.registerAction({\n  type: 'bmapRoam',\n  event: 'bmapRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  ecModel.eachComponent('bmap', function (bMapModel) {\n    var bmap = bMapModel.getBMap();\n    var center = bmap.getCenter();\n    bMapModel.setCenterAndZoom([center.lng, center.lat], bmap.getZoom());\n  });\n});\nvar version = '1.0.0';\nexports.version = version;","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'bmap',\n  render: function (bMapModel, ecModel, api) {\n    var rendering = true;\n    var bmap = bMapModel.getBMap();\n    var viewportRoot = api.getZr().painter.getViewportRoot();\n    var coordSys = bMapModel.coordinateSystem;\n\n    var moveHandler = function (type, target) {\n      if (rendering) {\n        return;\n      }\n\n      var offsetEl = viewportRoot.parentNode.parentNode.parentNode;\n      var mapOffset = [-parseInt(offsetEl.style.left, 10) || 0, -parseInt(offsetEl.style.top, 10) || 0];\n      viewportRoot.style.left = mapOffset[0] + 'px';\n      viewportRoot.style.top = mapOffset[1] + 'px';\n      coordSys.setMapOffset(mapOffset);\n      bMapModel.__mapOffset = mapOffset;\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    };\n\n    function zoomEndHandler() {\n      if (rendering) {\n        return;\n      }\n\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    }\n\n    bmap.removeEventListener('moving', this._oldMoveHandler); // FIXME\n    // Moveend may be triggered by centerAndZoom method when creating coordSys next time\n    // bmap.removeEventListener('moveend', this._oldMoveHandler);\n\n    bmap.removeEventListener('zoomend', this._oldZoomEndHandler);\n    bmap.addEventListener('moving', moveHandler); // bmap.addEventListener('moveend', moveHandler);\n\n    bmap.addEventListener('zoomend', zoomEndHandler);\n    this._oldMoveHandler = moveHandler;\n    this._oldZoomEndHandler = zoomEndHandler;\n    var roam = bMapModel.get('roam');\n\n    if (roam && roam !== 'scale') {\n      bmap.enableDragging();\n    } else {\n      bmap.disableDragging();\n    }\n\n    if (roam && roam !== 'move') {\n      bmap.enableScrollWheelZoom();\n      bmap.enableDoubleClickZoom();\n      bmap.enablePinchToZoom();\n    } else {\n      bmap.disableScrollWheelZoom();\n      bmap.disableDoubleClickZoom();\n      bmap.disablePinchToZoom();\n    }\n\n    var originalStyle = bMapModel.__mapStyle;\n    var newMapStyle = bMapModel.get('mapStyle') || {}; // FIXME, Not use JSON methods\n\n    var mapStyleStr = JSON.stringify(newMapStyle);\n\n    if (JSON.stringify(originalStyle) !== mapStyleStr) {\n      // FIXME May have blank tile when dragging if setMapStyle\n      if (Object.keys(newMapStyle).length) {\n        bmap.setMapStyle(newMapStyle);\n      }\n\n      bMapModel.__mapStyle = JSON.parse(mapStyleStr);\n    }\n\n    rendering = false;\n  }\n});\n\nmodule.exports = _default;"],"sourceRoot":""}