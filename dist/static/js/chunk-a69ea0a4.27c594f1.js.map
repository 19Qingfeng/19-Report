{"version":3,"sources":["webpack:///./node_modules/echarts-wordcloud/src/wordCloud.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillSeries.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudSeries.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapModel.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapCoordSys.js","webpack:///./node_modules/echarts-wordcloud/src/layout.js","webpack:///./node_modules/echarts-wordcloud/index.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/bmap.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFill.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudView.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillView.js","webpack:///./node_modules/echarts-liquidfill/src/liquidFillLayout.js","webpack:///./node_modules/echarts-liquidfill/index.js","webpack:///./node_modules/_echarts@4.2.1@echarts/extension/bmap/BMapView.js"],"names":["echarts","layoutUtil","wordCloudLayoutHelper","isSupported","Error","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","width","height","newImageData","createImageData","toneSum","toneCnt","i","data","length","alpha","tone","threshold","putImageData","registerLayout","ecModel","api","eachSeriesByType","seriesModel","gridRect","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","getData","canvas","document","createElement","maskImage","get","drawImage","e","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","Math","PI","gridSize","onWordCloudDrawn","item","detail","drawn","layoutInstance","ondraw","gx","x","gy","y","list","mapArray","value","idx","itemModel","getItemModel","getName","number","linearMap","sort","a","b","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shuffle","shape","addEventListener","dispose","removeEventListener","preventDefault","registerPreprocessor","option","series","util","isArray","compats","compatTextStyle","textStyle","each","key","hasOwnProperty","format","capitalFirst","seriesItem","type","normal","emphasis","completeDimensions","extendSeriesModel","visualColorAccessPath","optionUpdated","this","max","floor","getInitialData","dimensions","List","initData","defaultOption","color","center","radius","amplitude","waveLength","phase","period","direction","waveAnimation","animationEasing","animationEasingUpdate","animationDuration","animationDurationUpdate","outline","show","borderDistance","itemStyle","borderColor","borderWidth","shadowBlur","shadowColor","backgroundStyle","opacity","label","insideColor","fontSize","align","baseline","position","left","top","v2Equal","_default","extendComponentModel","getBMap","__bmap","setCenterAndZoom","zoom","centerOrZoomChanged","mapStyle","roam","module","exports","Overlay","_echarts","zrUtil","graphic","matrix","BMapCoordSys","bmap","_bmap","_mapOffset","_api","_projection","BMap","MercatorProjection","dataToCoordSize","dataSize","dataItem","map","dimIdx","val","halfSize","p1","p2","abs","dataToPoint","createOverlayCtor","root","_root","prototype","initialize","getPanes","labelPane","appendChild","draw","setZoom","_zoom","setCenter","_center","lngLatToPoint","Point","setMapOffset","mapOffset","point","px","pointToOverlayPixel","pointToData","pt","overlayPixelToPoint","lng","lat","getViewRect","BoundingRect","getRoamTransform","create","prepareCustoms","rect","coordSys","coord","bind","size","bmapCoordSys","getDom","eachComponent","bmapModel","painter","getZr","viewportRoot","getViewportRoot","bmapRoot","querySelector","style","removeChild","cssText","classList","add","Map","overlay","addOverlay","getViewportRootOffset","offsetLeft","offsetTop","centerAndZoom","__mapOffset","coordinateSystem","eachSeries","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","callbacks","undefined","message","setZeroTimeout","callback","id","push","evt","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","fillText","Array","some","minFontSize","hanWidth","mWidth","font","measureText","shuffleArray","arr","j","random","WordCloud","elements","options","forEach","el","getElementById","tagName","settings","minSize","weightFactor","backgroundColor","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","classes","hover","click","factor","theta","sin","thetaPrime","cos","sqrt","grid","ngx","ngy","maxRadius","escapeTime","getTextColor","g","maskRectWidth","min","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","getBoundingClientRect","touches","eventX","eventY","wordcloudhover","info","dimension","wordcloudclick","pointsAtRadius","getPointsAtRadius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","round","getTextInfo","word","weight","rotateDeg","debug","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","body","save","scale","translate","rotate","fillStyle","textBaseline","strokeRect","restore","occupied","bounds","singleGridLoop","fillRect","gw","gh","fillTextWidth","fillTextHeight","canFitText","py","drawText","distance","attributes","span","transformRule","styleRules","cssProp","textContent","attribute","className","fillGridAt","updateGrid","w","h","putWord","r","tryToPutWordAtPoint","gxy","rot","concat","res","sendEvent","cancelable","createEvent","initCustomEvent","dispatchEvent","start","loopingFunction","stoppingFunction","clearRect","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","listener","anotherWordCloudStart","loop","canceled","toFixed","registerCoordinateSystem","registerAction","event","update","payload","bMapModel","getCenter","getZoom","version","registerVisual","curry","extendChartView","render","group","removeAll","text","dataIdx","textStyleModel","getModel","emphasisTextStyleModel","textEl","Text","setTextStyle","textFill","getItemVisual","rotation","setItemGraphicEl","setHoverStyle","forMerge","_model","remove","numberUtil","symbolUtil","parsePercent","LiquidLayout","outlineDistance","outlineBorderWidth","showOutline","outterRadius","innerRadius","paddingRadius","cx","cy","isFillContainer","symbol","getOutline","lineWidth","wavePath","getBackground","oldData","_data","waves","getPath","isForClipping","indexOf","path","makePath","slice","bouding","getBoundingRect","createSymbol","Circle","outlinePath","fill","setStyle","getItemStyle","strokePath","z2","fillPath","stroke","Group","getWave","isInverse","oldWave","radiusX","radiusY","itemStyleModel","waterLevel","normalStyle","seriesColor","wave","inverse","_waterLevel","hoverStyle","clip","setClipPath","setWaveAnimation","maxSpeed","defaultSpeed","cnt","count","speed","phaseOffset","animate","when","during","dirty","getText","labelModel","formatLabel","formatted","getFormattedLabel","defaultVal","defaultLabel","name","isNaN","textOption","textAlign","textVerticalAlign","silent","outsideTextRect","Rect","setText","insideTextRect","insColor","boundingCircle","CompoundPath","paths","diff","initProps","newIdx","oldIdx","waveElement","getItemGraphicEl","newWave","shapeAttrs","attr","styleAttrs","updateProps","useStyle","clipPath","execute","getWaterPositions","stage","extendShape","buildPath","curves","moveTo","waveRight","c","pos","bezierCurveTo","lineTo","closePath","extendComponentView","rendering","moveHandler","target","offsetEl","parentNode","dispatchAction","zoomEndHandler","_oldMoveHandler","_oldZoomEndHandler","enableDragging","disableDragging","enableScrollWheelZoom","enableDoubleClickZoom","enablePinchToZoom","disableScrollWheelZoom","disableDoubleClickZoom","disablePinchToZoom","originalStyle","__mapStyle","newMapStyle","mapStyleStr","JSON","stringify","Object","keys","setMapStyle","parse"],"mappings":"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","file":"static/js/chunk-a69ea0a4.27c594f1.js","sourcesContent":["var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.liquidFill',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    defaultOption: {\n        color: ['#294D99', '#156ACF', '#1598ED', '#45BDFF'],\n        center: ['50%', '50%'],\n        radius: '50%',\n        amplitude: '8%',\n        waveLength: '80%',\n        phase: 'auto',\n        period: 'auto',\n        direction: 'right',\n        shape: 'circle',\n\n        waveAnimation: true,\n        animationEasing: 'linear',\n        animationEasingUpdate: 'linear',\n        animationDuration: 2000,\n        animationDurationUpdate: 1000,\n\n        outline: {\n            show: true,\n            borderDistance: 8,\n            itemStyle: {\n                color: 'none',\n                borderColor: '#294D99',\n                borderWidth: 8,\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.25)'\n            }\n        },\n\n        backgroundStyle: {\n            color: '#E3F7FF'\n        },\n\n        itemStyle: {\n            opacity: 0.95,\n            shadowBlur: 50,\n            shadowColor: 'rgba(0, 0, 0, 0.4)'\n        },\n\n        label: {\n            show: true,\n            color: '#294D99',\n            insideColor: '#fff',\n            fontSize: 50,\n            fontWeight: 'bold',\n\n            align: 'center',\n            baseline: 'middle',\n            position: 'inside'\n        },\n\n        emphasis: {\n            itemStyle: {\n                opacity: 0.8\n            }\n        }\n    }\n});\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\nvar _default = echarts.extendComponentModel({\n  type: 'bmap',\n  getBMap: function () {\n    // __bmap is injected when creating BMapCoordSys\n    return this.__bmap;\n  },\n  setCenterAndZoom: function (center, zoom) {\n    this.option.center = center;\n    this.option.zoom = zoom;\n  },\n  centerOrZoomChanged: function (center, zoom) {\n    var option = this.option;\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\n  },\n  defaultOption: {\n    center: [104.114129, 37.550339],\n    zoom: 5,\n    mapStyle: {},\n    roam: false\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _echarts = require(\"echarts\");\n\nvar zrUtil = _echarts.util;\nvar graphic = _echarts.graphic;\nvar matrix = _echarts.matrix;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global BMap */\nfunction BMapCoordSys(bmap, api) {\n  this._bmap = bmap;\n  this.dimensions = ['lng', 'lat'];\n  this._mapOffset = [0, 0];\n  this._api = api;\n  this._projection = new BMap.MercatorProjection();\n}\n\nBMapCoordSys.prototype.dimensions = ['lng', 'lat'];\n\nBMapCoordSys.prototype.setZoom = function (zoom) {\n  this._zoom = zoom;\n};\n\nBMapCoordSys.prototype.setCenter = function (center) {\n  this._center = this._projection.lngLatToPoint(new BMap.Point(center[0], center[1]));\n};\n\nBMapCoordSys.prototype.setMapOffset = function (mapOffset) {\n  this._mapOffset = mapOffset;\n};\n\nBMapCoordSys.prototype.getBMap = function () {\n  return this._bmap;\n};\n\nBMapCoordSys.prototype.dataToPoint = function (data) {\n  var point = new BMap.Point(data[0], data[1]); // TODO mercator projection is toooooooo slow\n  // var mercatorPoint = this._projection.lngLatToPoint(point);\n  // var width = this._api.getZr().getWidth();\n  // var height = this._api.getZr().getHeight();\n  // var divider = Math.pow(2, 18 - 10);\n  // return [\n  //     Math.round((mercatorPoint.x - this._center.x) / divider + width / 2),\n  //     Math.round((this._center.y - mercatorPoint.y) / divider + height / 2)\n  // ];\n\n  var px = this._bmap.pointToOverlayPixel(point);\n\n  var mapOffset = this._mapOffset;\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\n};\n\nBMapCoordSys.prototype.pointToData = function (pt) {\n  var mapOffset = this._mapOffset;\n\n  var pt = this._bmap.overlayPixelToPoint({\n    x: pt[0] + mapOffset[0],\n    y: pt[1] + mapOffset[1]\n  });\n\n  return [pt.lng, pt.lat];\n};\n\nBMapCoordSys.prototype.getViewRect = function () {\n  var api = this._api;\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\n};\n\nBMapCoordSys.prototype.getRoamTransform = function () {\n  return matrix.create();\n};\n\nBMapCoordSys.prototype.prepareCustoms = function (data) {\n  var rect = this.getViewRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'bmap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(this.dataToPoint, this),\n      size: zrUtil.bind(dataToCoordSize, this)\n    }\n  };\n};\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nvar Overlay; // For deciding which dimensions to use when creating list data\n\nBMapCoordSys.dimensions = BMapCoordSys.prototype.dimensions;\n\nfunction createOverlayCtor() {\n  function Overlay(root) {\n    this._root = root;\n  }\n\n  Overlay.prototype = new BMap.Overlay();\n  /**\n   * 初始化\n   *\n   * @param {BMap.Map} map\n   * @override\n   */\n\n  Overlay.prototype.initialize = function (map) {\n    map.getPanes().labelPane.appendChild(this._root);\n    return this._root;\n  };\n  /**\n   * @override\n   */\n\n\n  Overlay.prototype.draw = function () {};\n\n  return Overlay;\n}\n\nBMapCoordSys.create = function (ecModel, api) {\n  var bmapCoordSys;\n  var root = api.getDom(); // TODO Dispose\n\n  ecModel.eachComponent('bmap', function (bmapModel) {\n    var painter = api.getZr().painter;\n    var viewportRoot = painter.getViewportRoot();\n\n    if (typeof BMap === 'undefined') {\n      throw new Error('BMap api is not loaded');\n    }\n\n    Overlay = Overlay || createOverlayCtor();\n\n    if (bmapCoordSys) {\n      throw new Error('Only one bmap component can exist');\n    }\n\n    if (!bmapModel.__bmap) {\n      // Not support IE8\n      var bmapRoot = root.querySelector('.ec-extension-bmap');\n\n      if (bmapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in BMapView\n        viewportRoot.style.left = '0px';\n        viewportRoot.style.top = '0px';\n        root.removeChild(bmapRoot);\n      }\n\n      bmapRoot = document.createElement('div');\n      bmapRoot.style.cssText = 'width:100%;height:100%'; // Not support IE8\n\n      bmapRoot.classList.add('ec-extension-bmap');\n      root.appendChild(bmapRoot);\n      var bmap = bmapModel.__bmap = new BMap.Map(bmapRoot);\n      var overlay = new Overlay(viewportRoot);\n      bmap.addOverlay(overlay); // Override\n\n      painter.getViewportRootOffset = function () {\n        return {\n          offsetLeft: 0,\n          offsetTop: 0\n        };\n      };\n    }\n\n    var bmap = bmapModel.__bmap; // Set bmap options\n    // centerAndZoom before layout and render\n\n    var center = bmapModel.get('center');\n    var zoom = bmapModel.get('zoom');\n\n    if (center && zoom) {\n      var pt = new BMap.Point(center[0], center[1]);\n      bmap.centerAndZoom(pt, zoom);\n    }\n\n    bmapCoordSys = new BMapCoordSys(bmap, api);\n    bmapCoordSys.setMapOffset(bmapModel.__mapOffset || [0, 0]);\n    bmapCoordSys.setZoom(zoom);\n    bmapCoordSys.setCenter(center);\n    bmapModel.coordinateSystem = bmapCoordSys;\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'bmap') {\n      seriesModel.coordinateSystem = bmapCoordSys;\n    }\n  });\n};\n\nvar _default = BMapCoordSys;\nmodule.exports = _default;","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","module.exports = require('./src/wordCloud');","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\nvar BMapCoordSys = require(\"./BMapCoordSys\");\n\nrequire(\"./BMapModel\");\n\nrequire(\"./BMapView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * BMap component extension\n */\necharts.registerCoordinateSystem('bmap', BMapCoordSys); // Action\n\necharts.registerAction({\n  type: 'bmapRoam',\n  event: 'bmapRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  ecModel.eachComponent('bmap', function (bMapModel) {\n    var bmap = bMapModel.getBMap();\n    var center = bmap.getCenter();\n    bMapModel.setCenterAndZoom([center.lng, center.lat], bmap.getZoom());\n  });\n});\nvar version = '1.0.0';\nexports.version = version;","var echarts = require('echarts/lib/echarts');\n\nrequire('./liquidFillSeries');\nrequire('./liquidFillView');\n\n\necharts.registerVisual(\n    echarts.util.curry(\n        require('echarts/lib/visual/dataColor'), 'liquidFill'\n    )\n);\n","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n","var echarts = require('echarts/lib/echarts');\nvar numberUtil = echarts.number;\nvar symbolUtil = require('echarts/lib/util/symbol');\nvar parsePercent = numberUtil.parsePercent;\n\nvar LiquidLayout = require('./liquidFillLayout');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'liquidFill',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var itemModel = data.getItemModel(0);\n\n        var center = itemModel.get('center');\n        var radius = itemModel.get('radius');\n\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        // itemStyle\n        var outlineDistance = 0;\n        var outlineBorderWidth = 0;\n        var showOutline = seriesModel.get('outline.show');\n\n        if (showOutline) {\n            outlineDistance = seriesModel.get('outline.borderDistance');\n            outlineBorderWidth = parsePercent(\n                seriesModel.get('outline.itemStyle.borderWidth'), size\n            );\n        }\n\n        var cx = parsePercent(center[0], width);\n        var cy = parsePercent(center[1], height);\n\n        var outterRadius;\n        var innerRadius;\n        var paddingRadius;\n\n        var isFillContainer = false;\n\n        var symbol = seriesModel.get('shape');\n        if (symbol === 'container') {\n            // a shape that fully fills the container\n            isFillContainer = true;\n\n            outterRadius = [\n                width / 2,\n                height / 2\n            ];\n            innerRadius = [\n                outterRadius[0] - outlineBorderWidth / 2,\n                outterRadius[1] - outlineBorderWidth / 2\n            ];\n            paddingRadius = [\n                parsePercent(outlineDistance, width),\n                parsePercent(outlineDistance, height)\n            ];\n\n            radius = [\n                Math.max(innerRadius[0] - paddingRadius[0], 0),\n                Math.max(innerRadius[1] - paddingRadius[1], 0)\n            ];\n        }\n        else {\n            outterRadius = parsePercent(radius, size) / 2;\n            innerRadius = outterRadius - outlineBorderWidth / 2;\n            paddingRadius = parsePercent(outlineDistance, size);\n\n            radius = Math.max(innerRadius - paddingRadius, 0);\n        }\n\n        if (showOutline) {\n            var outline = getOutline();\n            outline.style.lineWidth = outlineBorderWidth;\n            group.add(getOutline());\n        }\n\n        var left = isFillContainer ? 0 : cx - radius;\n        var top = isFillContainer ? 0 : cy - radius;\n\n        var wavePath = null;\n\n        group.add(getBackground());\n\n        // each data item for a wave\n        var oldData = this._data;\n        var waves = [];\n        data.diff(oldData)\n            .add(function (idx) {\n                var wave = getWave(idx, false);\n\n                var waterLevel = wave.shape.waterLevel;\n                wave.shape.waterLevel = isFillContainer ? height / 2 : radius;\n                echarts.graphic.initProps(wave, {\n                    shape: {\n                        waterLevel: waterLevel\n                    }\n                }, seriesModel);\n\n                wave.z2 = 2;\n                setWaveAnimation(idx, wave, null);\n\n                group.add(wave);\n                data.setItemGraphicEl(idx, wave);\n                waves.push(wave);\n            })\n            .update(function (newIdx, oldIdx) {\n                var waveElement = oldData.getItemGraphicEl(oldIdx);\n\n                // new wave is used to calculate position, but not added\n                var newWave = getWave(newIdx, false, waveElement);\n\n                // changes with animation\n                var shape = {};\n                var shapeAttrs = ['amplitude', 'cx', 'cy', 'phase', 'radius', 'radiusY', 'waterLevel', 'waveLength'];\n                for (var i = 0; i < shapeAttrs.length; ++i) {\n                    var attr = shapeAttrs[i];\n                    if (newWave.shape.hasOwnProperty(attr)) {\n                        shape[attr] = newWave.shape[attr];\n                    }\n                }\n\n                var style = {};\n                var styleAttrs = ['fill', 'opacity', 'shadowBlur', 'shadowColor'];\n                for (var i = 0; i < styleAttrs.length; ++i) {\n                    var attr = styleAttrs[i];\n                    if (newWave.style.hasOwnProperty(attr)) {\n                        style[attr] = newWave.style[attr];\n                    }\n                }\n\n                if (isFillContainer) {\n                    shape.radiusY = height / 2;\n                }\n\n                // changes with animation\n                echarts.graphic.updateProps(waveElement, {\n                    shape: shape\n                }, seriesModel);\n\n                waveElement.useStyle(style);\n\n                // instant changes\n                waveElement.position = newWave.position;\n                waveElement.setClipPath(newWave.clipPath);\n                waveElement.shape.inverse = newWave.inverse;\n\n                setWaveAnimation(newIdx, waveElement, waveElement);\n                group.add(waveElement);\n                data.setItemGraphicEl(newIdx, waveElement);\n                waves.push(waveElement);\n            })\n            .remove(function (idx) {\n                var wave = oldData.getItemGraphicEl(idx);\n                group.remove(wave);\n            })\n            .execute();\n\n        if (itemModel.get('label.show')) {\n            group.add(getText(waves));\n        }\n\n        this._data = data;\n\n        /**\n         * Get path for outline, background and clipping\n         *\n         * @param {number} r outter radius of shape\n         * @param {boolean|undefined} isForClipping if the shape is used\n         *                                          for clipping\n         */\n        function getPath(r, isForClipping) {\n            if (symbol) {\n                // customed symbol path\n                if (symbol.indexOf('path://') === 0) {\n                    var path = echarts.graphic.makePath(symbol.slice(7), {});\n                    var bouding = path.getBoundingRect();\n                    var w = bouding.width;\n                    var h = bouding.height;\n                    if (w > h) {\n                        h = r * 2 / w * h;\n                        w = r * 2;\n                    }\n                    else {\n                        w = r * 2 / h * w;\n                        h = r * 2;\n                    }\n\n                    var left = isForClipping ? 0 : cx - w / 2;\n                    var top = isForClipping ? 0 : cy - h / 2;\n                    path = echarts.graphic.makePath(\n                        symbol.slice(7),\n                        {},\n                        new echarts.graphic.BoundingRect(left, top, w, h)\n                    );\n                    if (isForClipping) {\n                        path.position = [-w / 2, -h / 2];\n                    }\n                    return path;\n                }\n                else if (isFillContainer) {\n                    // fully fill the container\n                    var x = isForClipping ? -r[0] : cx - r[0];\n                    var y = isForClipping ? -r[1] : cy - r[1];\n                    return symbolUtil.createSymbol(\n                        'rect', x, y, r[0] * 2, r[1] * 2\n                    );\n                }\n                else {\n                    var x = isForClipping ? -r : cx - r;\n                    var y = isForClipping ? -r : cy - r;\n                    if (symbol === 'pin') {\n                        y += r;\n                    }\n                    else if (symbol === 'arrow') {\n                        y -= r;\n                    }\n                    return symbolUtil.createSymbol(symbol, x, y, r * 2, r * 2);\n                }\n            }\n\n            return new echarts.graphic.Circle({\n                shape: {\n                    cx: isForClipping ? 0 : cx,\n                    cy: isForClipping ? 0 : cy,\n                    r: r\n                }\n            });\n        }\n        /**\n         * Create outline\n         */\n        function getOutline() {\n            var outlinePath = getPath(outterRadius);\n            outlinePath.style.fill = null;\n\n            outlinePath.setStyle(seriesModel.getModel('outline.itemStyle')\n                .getItemStyle());\n\n            return outlinePath;\n        }\n\n        /**\n         * Create background\n         */\n        function getBackground() {\n            // Seperate stroke and fill, so we can use stroke to cover the alias of clipping.\n            var strokePath = getPath(radius);\n            strokePath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            strokePath.style.fill = null;\n\n            // Stroke is front of wave\n            strokePath.z2 = 5;\n\n            var fillPath = getPath(radius);\n            fillPath.setStyle(seriesModel.getModel('backgroundStyle')\n                .getItemStyle());\n            fillPath.style.stroke = null;\n\n            var group = new echarts.graphic.Group();\n            group.add(strokePath);\n            group.add(fillPath);\n\n            return group;\n        }\n\n        /**\n         * wave shape\n         */\n        function getWave(idx, isInverse, oldWave) {\n            var radiusX = isFillContainer ? radius[0] : radius;\n            var radiusY = isFillContainer ? height / 2 : radius;\n\n            var itemModel = data.getItemModel(idx);\n            var itemStyleModel = itemModel.getModel('itemStyle');\n            var phase = itemModel.get('phase');\n            var amplitude = parsePercent(itemModel.get('amplitude'),\n                radiusY * 2);\n            var waveLength = parsePercent(itemModel.get('waveLength'),\n                radiusX * 2);\n\n            var value = data.get('value', idx);\n            var waterLevel = radiusY - value * radiusY * 2;\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n            var normalStyle = itemStyleModel.getItemStyle();\n            if (!normalStyle.fill) {\n                var seriesColor = seriesModel.get('color');\n                var id = idx % seriesColor.length;\n                normalStyle.fill = seriesColor[id];\n            }\n\n            var x = radiusX * 2;\n            var wave = new LiquidLayout({\n                shape: {\n                    waveLength: waveLength,\n                    radius: radiusX,\n                    radiusY: radiusY,\n                    cx: x,\n                    cy: 0,\n                    waterLevel: waterLevel,\n                    amplitude: amplitude,\n                    phase: phase,\n                    inverse: isInverse\n                },\n                style: normalStyle,\n                position: [cx, cy]\n            });\n            wave.shape._waterLevel = waterLevel;\n\n            var hoverStyle = itemModel.getModel('emphasis.itemStyle')\n                .getItemStyle();\n            hoverStyle.lineWidth = 0;\n            echarts.graphic.setHoverStyle(wave, hoverStyle);\n\n            // clip out the part outside the circle\n            var clip = getPath(radius, true);\n            // set fill for clipPath, otherwise it will not trigger hover event\n            clip.setStyle({\n                fill: 'white'\n            });\n            wave.setClipPath(clip);\n\n            return wave;\n        }\n\n        function setWaveAnimation(idx, wave, oldWave) {\n            var itemModel = data.getItemModel(idx);\n\n            var maxSpeed = itemModel.get('period');\n            var direction = itemModel.get('direction');\n\n            var value = data.get('value', idx);\n\n            var phase = itemModel.get('phase');\n            phase = oldWave ? oldWave.shape.phase\n                : (phase === 'auto' ? idx * Math.PI / 4 : phase);\n\n            var defaultSpeed = function (maxSpeed) {\n                var cnt = data.count();\n                return cnt === 0 ? maxSpeed : maxSpeed *\n                    (0.2 + (cnt - idx) / cnt * 0.8);\n            };\n            var speed = 0;\n            if (maxSpeed === 'auto') {\n                speed = defaultSpeed(5000);\n            }\n            else {\n                speed = typeof maxSpeed === 'function'\n                    ? maxSpeed(value, idx) : maxSpeed;\n            }\n\n            // phase for moving left/right\n            var phaseOffset = 0;\n            if (direction === 'right' || direction == null) {\n                phaseOffset = Math.PI;\n            }\n            else if (direction === 'left') {\n                phaseOffset = -Math.PI;\n            }\n            else if (direction === 'none') {\n                phaseOffset = 0;\n            }\n            else {\n                console.error('Illegal direction value for liquid fill.');\n            }\n\n            // wave animation of moving left/right\n            if (direction !== 'none' && itemModel.get('waveAnimation')) {\n                wave\n                    .animate('shape', true)\n                    .when(0, {\n                        phase: phase\n                    })\n                    .when(speed / 2, {\n                        phase: phaseOffset + phase\n                    })\n                    .when(speed, {\n                        phase: phaseOffset * 2 + phase\n                    })\n                    .during(function () {\n                        if (wavePath) {\n                            wavePath.dirty(true);\n                        }\n                    })\n                    .start();\n            }\n        }\n\n        /**\n         * text on wave\n         */\n        function getText(waves) {\n            var labelModel = itemModel.getModel('label');\n\n            function formatLabel() {\n                var formatted = seriesModel.getFormattedLabel(0, 'normal');\n                var defaultVal = (data.get('value', 0) * 100);\n                var defaultLabel = data.getName(0) || seriesModel.name;\n                if (!isNaN(defaultVal)) {\n                    defaultLabel = defaultVal.toFixed(0) + '%';\n                }\n                return formatted == null ? defaultLabel : formatted;\n            }\n\n            var textOption = {\n                z2: 10,\n                shape: {\n                    x: left,\n                    y: top,\n                    width: (isFillContainer ? radius[0] : radius) * 2,\n                    height: (isFillContainer ? radius[1] : radius) * 2\n                },\n                style: {\n                    fill: 'transparent',\n                    text: formatLabel(),\n                    textAlign: labelModel.get('align'),\n                    textVerticalAlign: labelModel.get('baseline')\n                },\n                silent: true\n            };\n\n            var outsideTextRect = new echarts.graphic.Rect(textOption);\n            var color = labelModel.get('color');\n            echarts.graphic.setText(outsideTextRect.style, labelModel, color);\n\n            var insideTextRect = new echarts.graphic.Rect(textOption);\n            var insColor = labelModel.get('insideColor');\n            echarts.graphic.setText(insideTextRect.style, labelModel, insColor);\n            insideTextRect.style.textFill = insColor;\n\n            var group = new echarts.graphic.Group();\n            group.add(outsideTextRect);\n            group.add(insideTextRect);\n\n            // clip out waves for insideText\n            var boundingCircle = getPath(radius, true);\n\n            wavePath = new echarts.graphic.CompoundPath({\n                shape: {\n                    paths: waves\n                },\n                position: [cx, cy]\n            });\n\n            wavePath.setClipPath(boundingCircle);\n            insideTextRect.setClipPath(wavePath);\n\n            return group;\n        }\n    },\n\n    dispose: function () {\n        // dispose nothing here\n    }\n});\n","var echarts = require('echarts/lib/echarts');\n\nmodule.exports = echarts.graphic.extendShape({\n    type: 'ec-liquid-fill',\n\n    shape: {\n        waveLength: 0,\n        radius: 0,\n        radiusY: 0,\n        cx: 0,\n        cy: 0,\n        waterLevel: 0,\n        amplitude: 0,\n        phase: 0,\n        inverse: false\n    },\n\n    buildPath: function (ctx, shape) {\n        if (shape.radiusY == null) {\n            shape.radiusY = shape.radius;\n        }\n\n        /**\n         * We define a sine wave having 4 waves, and make sure at least 8 curves\n         * is drawn. Otherwise, it may cause blank area for some waves when\n         * wave length is large enough.\n         */\n        var curves = Math.max(\n            Math.ceil(2 * shape.radius / shape.waveLength * 4) * 2,\n            8\n        );\n\n        // map phase to [-Math.PI * 2, 0]\n        while (shape.phase < -Math.PI * 2) {\n            shape.phase += Math.PI * 2;\n        }\n        while (shape.phase > 0) {\n            shape.phase -= Math.PI * 2;\n        }\n        var phase = shape.phase / Math.PI / 2 * shape.waveLength;\n\n        var left = shape.cx - shape.radius + phase - shape.radius * 2;\n\n        /**\n         * top-left corner as start point\n         *\n         * draws this point\n         *  |\n         * \\|/\n         *  ~~~~~~~~\n         *  |      |\n         *  +------+\n         */\n        ctx.moveTo(left, shape.waterLevel);\n\n        /**\n         * top wave\n         *\n         * ~~~~~~~~ <- draws this sine wave\n         * |      |\n         * +------+\n         */\n        var waveRight = 0;\n        for (var c = 0; c < curves; ++c) {\n            var stage = c % 4;\n            var pos = getWaterPositions(c * shape.waveLength / 4, stage,\n                shape.waveLength, shape.amplitude);\n            ctx.bezierCurveTo(pos[0][0] + left, -pos[0][1] + shape.waterLevel,\n                pos[1][0] + left, -pos[1][1] + shape.waterLevel,\n                pos[2][0] + left, -pos[2][1] + shape.waterLevel);\n\n            if (c === curves - 1) {\n                waveRight = pos[2][0];\n            }\n        }\n\n        if (shape.inverse) {\n            /**\n             * top-right corner\n             *                  2. draws this line\n             *                          |\n             *                       +------+\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       ~~~~~~~~\n             */\n            ctx.lineTo(waveRight + left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.cy - shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n        else {\n            /**\n             * top-right corner\n             *\n             *                       ~~~~~~~~\n             * 3. draws this line -> |      | <- 1. draws this line\n             *                       +------+\n             *                          ^\n             *                          |\n             *                  2. draws this line\n             */\n            ctx.lineTo(waveRight + left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.cy + shape.radiusY);\n            ctx.lineTo(left, shape.waterLevel);\n        }\n\n        ctx.closePath();\n    }\n});\n\n\n\n/**\n * Using Bezier curves to fit sine wave.\n * There is 4 control points for each curve of wave,\n * which is at 1/4 wave length of the sine wave.\n *\n * The control points for a wave from (a) to (d) are a-b-c-d:\n *          c *----* d\n *     b *\n *       |\n * ... a * ..................\n *\n * whose positions are a: (0, 0), b: (0.5, 0.5), c: (1, 1), d: (PI / 2, 1)\n *\n * @param {number} x          x position of the left-most point (a)\n * @param {number} stage      0-3, stating which part of the wave it is\n * @param {number} waveLength wave length of the sine wave\n * @param {number} amplitude  wave amplitude\n */\nfunction getWaterPositions(x, stage, waveLength, amplitude) {\n    if (stage === 0) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     amplitude],\n            [x + waveLength / 4,                   amplitude]\n        ];\n    }\n    else if (stage === 1) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n    else if (stage === 2) {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2, -amplitude / 2],\n            [x + 1 / 2 * waveLength / Math.PI,     -amplitude],\n            [x + waveLength / 4,                   -amplitude]\n        ]\n    }\n    else {\n        return [\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 2),\n            -amplitude],\n            [x + 1 / 2 * waveLength / Math.PI / 2 * (Math.PI - 1),\n            -amplitude / 2],\n            [x + waveLength / 4,                   0]\n        ]\n    }\n}\n","module.exports = require('./src/liquidFill');\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentView({\n  type: 'bmap',\n  render: function (bMapModel, ecModel, api) {\n    var rendering = true;\n    var bmap = bMapModel.getBMap();\n    var viewportRoot = api.getZr().painter.getViewportRoot();\n    var coordSys = bMapModel.coordinateSystem;\n\n    var moveHandler = function (type, target) {\n      if (rendering) {\n        return;\n      }\n\n      var offsetEl = viewportRoot.parentNode.parentNode.parentNode;\n      var mapOffset = [-parseInt(offsetEl.style.left, 10) || 0, -parseInt(offsetEl.style.top, 10) || 0];\n      viewportRoot.style.left = mapOffset[0] + 'px';\n      viewportRoot.style.top = mapOffset[1] + 'px';\n      coordSys.setMapOffset(mapOffset);\n      bMapModel.__mapOffset = mapOffset;\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    };\n\n    function zoomEndHandler() {\n      if (rendering) {\n        return;\n      }\n\n      api.dispatchAction({\n        type: 'bmapRoam'\n      });\n    }\n\n    bmap.removeEventListener('moving', this._oldMoveHandler); // FIXME\n    // Moveend may be triggered by centerAndZoom method when creating coordSys next time\n    // bmap.removeEventListener('moveend', this._oldMoveHandler);\n\n    bmap.removeEventListener('zoomend', this._oldZoomEndHandler);\n    bmap.addEventListener('moving', moveHandler); // bmap.addEventListener('moveend', moveHandler);\n\n    bmap.addEventListener('zoomend', zoomEndHandler);\n    this._oldMoveHandler = moveHandler;\n    this._oldZoomEndHandler = zoomEndHandler;\n    var roam = bMapModel.get('roam');\n\n    if (roam && roam !== 'scale') {\n      bmap.enableDragging();\n    } else {\n      bmap.disableDragging();\n    }\n\n    if (roam && roam !== 'move') {\n      bmap.enableScrollWheelZoom();\n      bmap.enableDoubleClickZoom();\n      bmap.enablePinchToZoom();\n    } else {\n      bmap.disableScrollWheelZoom();\n      bmap.disableDoubleClickZoom();\n      bmap.disablePinchToZoom();\n    }\n\n    var originalStyle = bMapModel.__mapStyle;\n    var newMapStyle = bMapModel.get('mapStyle') || {}; // FIXME, Not use JSON methods\n\n    var mapStyleStr = JSON.stringify(newMapStyle);\n\n    if (JSON.stringify(originalStyle) !== mapStyleStr) {\n      // FIXME May have blank tile when dragging if setMapStyle\n      if (Object.keys(newMapStyle).length) {\n        bmap.setMapStyle(newMapStyle);\n      }\n\n      bMapModel.__mapStyle = JSON.parse(mapStyleStr);\n    }\n\n    rendering = false;\n  }\n});\n\nmodule.exports = _default;"],"sourceRoot":""}